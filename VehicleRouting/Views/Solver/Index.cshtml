@using VehicleRouting.Models;
@model SolverViewModel

<div id="resultIndex">
    <div class="row">
        <div>
            <h2>Vehicle routing problem</h2>
            <p>Assign products to vehicles and choose the algorithm!</p>
        </div>
    </div>

    <div id="map" class="map">
        <script src="~/Scripts/OpenLayers/ol.js">
        </script>
        <script src="https://unpkg.com/ol-popup@4.0.0"></script>
        <link rel="stylesheet" href="~/Scripts/OpenLayers/ol.css" type="text/css">
        <link rel="stylesheet" href="https://unpkg.com/ol-popup@4.0.0/src/ol-popup.css" />
        <script src="~/Scripts/OpenLayersExtensions/mapHandling.js" type="module">
        </script>
        <script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript">
        </script>
        <script src="~/Scripts/validateVehicleWeight.js" type="text/javascript">
        </script>
        <script>
            var vehicles = [];
            var pointsOfDelivery = [];

            @foreach (Vehicle vehicle in Model.LocationsViewModel.Vehicles)
            {
                @:vehicles.push([@vehicle.SpawnPointX, @vehicle.SpawnPointY]);
            }

            @foreach (PointOfDelivery pointOfDelivery in Model.LocationsViewModel.PointsOfDelivery)
            {
                @:pointsOfDelivery.push([@pointOfDelivery.CoordX, @pointOfDelivery.CoordY]);
            }

            initMap(vehicles, pointsOfDelivery);
        </script>
        <script type="text/javascript">
            let vehiclesAndWeights = [];

            @foreach (Vehicle vehicle in Model.LocationsViewModel.Vehicles)
            {
                @:vehiclesAndWeights.push({ id: @vehicle.ID, vname: "@vehicle.Name", capacity: @vehicle.Capacity, packWeight: 0 });
            }

            validateVehicleWeights(vehiclesAndWeights);

        </script>
    </div>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "postForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-control">
            <div class="col-md-10">
                Choose metric:
                <select id="MetricType" name="MetricType">
                    <option value="0">Actual distance</option>
                    <option value="1">Manhattan metric</option>
                </select>
            </div>
        </div>
        <table>
            <tr>
                <th>
                    <div class="col-md-10">
                        Product
                    </div>
                </th>
                <th>
                    <div class="col-md-10">
                        Amount
                    </div>
                </th>
                <th>
                    <div class="col-md-10">
                        Total Weight
                    </div>
                </th>
                <th>
                    <div class="col-md-10">
                        Point of delivery
                    </div>
                </th>
                <th>
                    <div class="col-md-10">
                        Choose vehicle
                    </div>
                </th>
            </tr>
            @foreach (var item in Model.ProductPacks)
            {
                <tr class="packsAndVehicles">
                    <td>
                        <div class="col-sm-10">
                            @Html.DisplayFor(modelItem => item.Product.Name)
                        </div>
                    </td>
                    <td>
                        <div class="col-md-10">
                            @Html.DisplayFor(modelItem => item.Amount)
                        </div>
                    </td>
                    <td >
                        <div class="col-md-10">
                            @{
                                int result = item.Amount * item.Product.Weight;
                                <span class="pack-weight">@result</span">
                            }
                        </div>
                    </td>
                    <td>
                        <div class="col-md-10">
                            @Html.DisplayFor(modelItem => item.PointOfDelivery.Name)
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.VehiclesIDs, (IEnumerable<SelectListItem>)ViewBag.Vehicles)
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.HiddenFor(model => model.ProductPacks, new { @Value = Model.ProductPacks[Model.ProductPacks.FindIndex(v => v == item)].ID })
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Run" class="btn btn-default" />
            </div>
        </div>
    }
</div>