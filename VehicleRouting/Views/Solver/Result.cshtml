@using VehicleRouting.Models;
@model SolverResultViewModel

<div class="row">
    <div>
        <h2>Vehicle routing problem</h2>
        <p>These are the results!</p>
    </div>
</div>

<div id="map" class="map">
    <script src="~/Scripts/OpenLayers/ol.js">
    </script>
    <script src="https://unpkg.com/ol-popup@4.0.0"></script>
    <link rel="stylesheet" href="~/Scripts/OpenLayers/ol.css" type="text/css">
    <link rel="stylesheet" href="https://unpkg.com/ol-popup@4.0.0/src/ol-popup.css" />
    <script src="~/Scripts/OpenLayersExtensions/mapHandling.js" type="module">
    </script>
    <script>
        var vehicles = [];
        var pointsOfDelivery = [];
        var results = {};

        @foreach (Vehicle vehicle in Model.LocationsViewModel.Vehicles)
        {
            @:vehicles.push([@vehicle.SpawnPointX, @vehicle.SpawnPointY]);
        }

        @foreach (PointOfDelivery pointOfDelivery in Model.LocationsViewModel.PointsOfDelivery)
        {
            @:pointsOfDelivery.push([@pointOfDelivery.CoordX, @pointOfDelivery.CoordY]);
        }

        @foreach (int vehicleID in Model.AlgorithmDetailedResult.Keys)
        {
            @:var list = [];

            foreach ((float, float) value in Model.AlgorithmDetailedResult[vehicleID])
            {
                 @:list.push([@value.Item1, @value.Item2]);
            }

            @:results[@vehicleID] = list;
        }

        showResults(vehicles, pointsOfDelivery, results);

        @foreach (Vehicle vehicle in Model.LocationsViewModel.Vehicles)
        {
            @:labelVehicle(@vehicle.ID, [@vehicle.SpawnPointX, @vehicle.SpawnPointY]);
        }

        @foreach (PointOfDelivery pointOfDelivery in Model.LocationsViewModel.PointsOfDelivery)
        {
            @:labelPoint(@pointOfDelivery.ID, [@pointOfDelivery.CoordX, @pointOfDelivery.CoordY]);
        }
    </script>
</div>
<div id="details">
    <p>Click on one of the following boxes in order to select the route/routes you want to see.</p>
    <div id="getAll" onclick="getAllLayers()" class="panel panel-default">
        <p>GET ALL LAYERS</p>
    </div>
    @foreach (int vehicleID in Model.AlgorithmResult.Keys)
    {
        <div id="@("vehicle" + vehicleID)" onclick="getSeparateLayer(@vehicleID)" class="panel panel-default">
            @(Model.LocationsViewModel.Vehicles.First(v => v.ID == vehicleID).Name)
            <br/>
            @{
                int i;
            }
            S@(vehicleID) =>
            @for (i = 1; i < Model.AlgorithmResult[vehicleID].Count - 1; i++)
            {
                var tuple = Model.AlgorithmResult[vehicleID][i];

                @Html.Raw("P")
                @(Model.LocationsViewModel.PointsOfDelivery.ToList().Find(v => Math.Round(v.CoordX, 5) == Math.Round(tuple.Item1, 5) && Math.Round(v.CoordY, 5) == Math.Round(tuple.Item2, 5)).ID)
                @Html.Raw(" => ")
            }
            S@(vehicleID)
            <br/>
            Time: @Model.TimeAndDistance[vehicleID].Item1 seconds
            <br/>
            Distance: @Model.TimeAndDistance[vehicleID].Item2 meters
            <br/>
        </div>
    }
</div>